c
n
decoding_key
decodig_key
jwt_token.to_s
JWT.decode
c
JWT.decode(jwt_token.to_s, decoding_key)
request.params[:token]
c
token = header_array[header_array.length-1]
header_array
header_array = request.headers[:HTTP_SEC_WEBSOCKET_PROTOCOL].split(',')
c
w
c
token
payload
request.params[:token]
request
q
request
request.
request.params[:token]
cookies.signed
cookies
q
c
self.payload
self
self.
a
payload
q
n
current_user
c
data['message']
data
c
data
q
c
data
q
c
data
c
n
c
json @room
json: @room
@room
@room.messages.last(20)
c
n
params[:username]
params
